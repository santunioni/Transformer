@startuml
'https://plantuml.com/class-diagram

skinparam groupInheritance 3

interface AIOProducer {
    + async send(response: ServiceResponse) -> ProducerMetadata
}
interface AIOConsumer {
    + async __aiter__() -> EntrypointMetadata
}
class AIOKafkaConsumerAdapter {
    + async __aiter__() -> ConsumerRecord
}
AIOKafkaConsumerAdapter .u.|> AIOConsumer

abstract class FeederImplementation {
    + application: Application
    + {abstract} extract_data(input: EntrypointMetadata)
}
FeederImplementation o.l. Application

abstract class ServerlessImplementation {
    + async entrypoint(input: str | bytes)
    + {abstract} extract_data(input: EntrypointMetadata)
}
ServerlessImplementation -u-|> FeederImplementation

class LambdaFeeder {
    + extract_data(input: AWSLambdaMetadata)
}
LambdaFeeder -u-|> ServerlessImplementation


abstract class ConsumerImplementation {
    + aio_consumer: AIOConsumer
    + async consume()
    + {abstract} extract_data(input: EntrypointMetadata)
}
ConsumerImplementation -u-|> FeederImplementation
AIOConsumer <.l. ConsumerImplementation

class KafkaFeeder {
    + extract_data(input: ConsumerRecord)
}
KafkaFeeder -u-|> ConsumerImplementation

class Application {
    - letters: Queue[ServiceLetter]
    - aio_producer: AIOProducer
    + async ingest_data(raw_data)
}
Application .l.> AIOProducer

class AIOKafkaProducerAdapter {
    + async send()
    + async __aenter__()
    + async __aexit__()
}

AIOKafkaProducerAdapter -u-|> AIOProducer
@enduml
