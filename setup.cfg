[mypy]
ignore_missing_imports = True
plugins = pydantic.mypy

; --- Import discovery
;How to treat  (default normal): {normal,silent,skip,error}
;follow_imports = skip
;Do not silence errors in PEP 561 compliant installed packages
;no_silence_site_packages = True

; -- Disallow dynamic typing:
disallow_untyped_defs = True

; -- Untyped definitions and calls:
;Type check the interior of functions without type annotations
check_untyped_defs = True

; -- None and Optional handling:
;Don't assume arguments with default values of None are Optional
no_implicit_optional = True


; -- Configuring warnings:
;Warn about casting an expression to its inferred type
warn_redundant_casts = True
;;Warn about unneeded '# type: ignore' comments
warn_unused_ignores = True
;Warn about returning values of type Any from non-Any typed functions
warn_return_any = True


; -- Miscellaneous strictness flags:
;Raise toplevel errors caused by missing annotations
disallow_untyped_globals = True
;Disallow unconditional variable redefinition with a new type
disallow_redefinition = True
;Treat imports as private unless aliased
no_implicit_reexport = True

;Configuring error messages:
;Precede errors with "note:" messages explaining context
show_error_context = True

;Use visually nicer output in error messages: Use soft word wrap, show source code snippets, and show error location markers
pretty = True
